apiVersion: apps/v1
kind: Deployment
metadata:
  name: central
  namespace: stackrox
  labels:
    app.kubernetes.io/name: stackrox
    app: central
  annotations:
    owner: stackrox
    email: support@stackrox.com
spec:
  replicas: 1
  minReadySeconds: 15
  selector:
    matchLabels:
      app: central
  strategy:
    type: Recreate
  template:
    metadata:
      namespace: stackrox
      labels:
        app.kubernetes.io/name: stackrox
        app: central
    spec:
      
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 25
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/compute
                    operator: In
                    values:
                    - "true"
            - weight: 75
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/infra
                    operator: NotIn
                    values:
                    - "true"
            - weight: 100
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: NotIn
                    values:
                    - "true"

      serviceAccount: central

      securityContext:
        fsGroup: 4000
        runAsUser: 4000
      containers:
      - name: central
        image: 10.3.62.83:5000/stackrox/main:3.0.36.0
        command:
          - /stackrox/central-entrypoint.sh
        ports:
          - name: api
            containerPort: 8443
        readinessProbe:
          httpGet:
            scheme: HTTPS
            path: /v1/ping
            port: 8443
        resources:
          limits:
            cpu: 2000m
            memory: 8Gi
          requests:
            cpu: 1500m
            memory: 4Gi
          
        securityContext:
          capabilities:
            drop: ["NET_RAW"]
          readOnlyRootFilesystem: true
        env:
          - name: ROX_OFFLINE_MODE
            value: "true"
          
        volumeMounts:
        - name: varlog
          mountPath: /var/log/stackrox/
        - name: stackrox-data-volume
          mountPath: /stackrox/data
        - name: central-tmp-volume
          mountPath: /tmp
        - name: central-etc-ssl-volume
          mountPath: /etc/ssl
        - name: central-etc-pki-volume
          mountPath: /etc/pki/ca-trust
        - name: central-certs-volume
          mountPath: /run/secrets/stackrox.io/certs/
          readOnly: true
        - name: central-default-tls-cert-volume
          mountPath: /run/secrets/stackrox.io/default-tls-cert/
          readOnly: true
        - name: central-htpasswd-volume
          mountPath: /run/secrets/stackrox.io/htpasswd/
          readOnly: true
        - name: central-jwt-volume
          mountPath: /run/secrets/stackrox.io/jwt/
          readOnly: true
        - name: additional-ca-volume
          mountPath: /usr/local/share/ca-certificates/
          readOnly: true
        - name: central-license-volume
          mountPath: /run/secrets/stackrox.io/central-license/
          readOnly: true
        - name: stackrox-db
          mountPath: /var/lib/stackrox
        - name: central-config-volume
          mountPath: /etc/stackrox
        - name: proxy-config-volume
          mountPath: /run/secrets/stackrox.io/proxy-config/
          readOnly: true
      
        - name: monitoring-client-volume
          mountPath: /run/secrets/stackrox.io/monitoring/certs
          readOnly: true
      
      - name: telegraf
        image: 10.3.62.83:5000/stackrox/main:3.0.36.0
        command:
          - /telegraf
        env:
          - name: SERVICE
            value: central
          - name: CLUSTER_NAME
            value: main
          - name: PROMETHEUS_ENDPOINT
            value: http://127.0.0.1:9090
          - name: MONITORING_ENDPOINT
            value: monitoring.stackrox:443
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
          limits:
            memory: "100Mi"
            cpu: "100m"
        securityContext:
          capabilities:
            drop: ["NET_RAW"]
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: varlog
          mountPath: /var/log/stackrox/
          readOnly: true
        - name: monitoring-client-volume
          mountPath: /run/secrets/stackrox.io/monitoring/certs
          readOnly: true
        - name: telegraf-config-volume
          mountPath: /etc/telegraf/
          readOnly: true
      volumes:
      - name: varlog
        emptyDir: {}
      - name: stackrox-data-volume
        emptyDir: {}
      - name: central-tmp-volume
        emptyDir: {}
      - name: central-etc-ssl-volume
        emptyDir: {}
      - name: central-etc-pki-volume
        emptyDir: {}
      - name: central-certs-volume
        secret:
          secretName: central-tls
      - name: central-default-tls-cert-volume
        secret:
          secretName: central-default-tls-cert
          optional: true
      - name: central-htpasswd-volume
        secret:
          secretName: central-htpasswd
          optional: true
      - name: central-jwt-volume
        secret:
          secretName: central-tls
          items:
            - key: jwt-key.der
              path: jwt-key.der
      - name: additional-ca-volume
        secret:
          secretName: additional-ca
          optional: true
      - name: central-license-volume
        secret:
          secretName: central-license
          optional: true
      - name: central-config-volume
        configMap:
          name: central-config
          optional: true
      - name: proxy-config-volume
        secret:
          secretName: proxy-config
          optional: true
      
      - name: monitoring-client-volume
        secret:
          secretName: monitoring-client
      - name: telegraf-config-volume
        configMap:
          name: telegraf
      - name: stackrox-db
        persistentVolumeClaim:
          claimName: stackrox-db
        
